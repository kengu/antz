grep -R "DSIThread_MutexInit" ANT_LIB/
ANT_LIB/software/ANTFS/antfs_host.cpp:   if (DSIThread_MutexInit(&stMutexCriticalSection) != DSI_THREAD_ENONE)
ANT_LIB/software/ANTFS/antfs_host.cpp:   if (DSIThread_MutexInit(&stMutexResponseQueue) != DSI_THREAD_ENONE)
ANT_LIB/software/ANTFS/antfs_client_channel.cpp:   if (DSIThread_MutexInit(&stMutexCriticalSection) != DSI_THREAD_ENONE)
ANT_LIB/software/ANTFS/antfs_client_channel.cpp:   if (DSIThread_MutexInit(&stMutexResponseQueue) != DSI_THREAD_ENONE)
ANT_LIB/software/ANTFS/antfs_client_channel.cpp:      if (DSIThread_MutexInit(&stMutexPairingTimeout) != DSI_THREAD_ENONE)
ANT_LIB/software/ANTFS/antfs_host_channel.cpp:   if (DSIThread_MutexInit(&stMutexCriticalSection) != DSI_THREAD_ENONE)
ANT_LIB/software/ANTFS/antfs_host_channel.cpp:   if (DSIThread_MutexInit(&stMutexResponseQueue) != DSI_THREAD_ENONE)
ANT_LIB/software/ANTFS/antfs_host_channel.cpp:      if (DSIThread_MutexInit(&stMutexIgnoreListAccess) != DSI_THREAD_ENONE)
ANT_LIB/software/USB/device_handles/usb_device_handle_si_iokit.cpp:   if(DSIThread_MutexInit(&stMutexCriticalSection) != DSI_THREAD_ENONE)
ANT_LIB/software/USB/device_handles/usb_device_handle_vcp.cpp:   if(DSIThread_MutexInit(&stMutexCriticalSection) != DSI_THREAD_ENONE)
ANT_LIB/software/USB/device_handles/usb_device_handle_iokit.cpp:   if(DSIThread_MutexInit(&stMutexCriticalSection) != DSI_THREAD_ENONE)
ANT_LIB/software/USB/iokit_driver/iokit_transfer.cpp:   DSIThread_MutexInit(&stMutexCriticalSection);
ANT_LIB/software/USB/iokit_driver/iokit_transfer.cpp:   DSIThread_MutexInit(&stMutexCriticalSection);
ANT_LIB/software/system/dsi_timer.cpp:   if (DSIThread_MutexInit(&stMutexCriticalSection) != DSI_THREAD_ENONE)
ANT_LIB/software/system/dsi_thread.h:UCHAR DSIThread_MutexInit(DSI_MUTEX *pstMutex_);
ANT_LIB/software/system/dsi_thread_posix.c:UCHAR DSIThread_MutexInit(DSI_MUTEX *pstMutex_)
ANT_LIB/software/system/dsi_ts_queue.hpp:      ret = DSIThread_MutexInit(&stMutex);
ANT_LIB/software/system/dsi_thread_win32.c:UCHAR DSIThread_MutexInit(DSI_MUTEX *pstMutex_)
ANT_LIB/software/system/dsi_debug.cpp:   DSIThread_MutexInit(&stThreadBufferMutex);
ANT_LIB/software/system/dsi_debug.cpp:   DSIThread_MutexInit(&stSerialBufferMutex);
ANT_LIB/software/system/dsi_debug.cpp:   DSIThread_MutexInit(&stInputMutex);
ANT_LIB/software/system/dsi_debug.cpp:   DSIThread_MutexInit(&stFilenameMutex);
ANT_LIB/software/system/dsi_debug.cpp:   DSIThread_MutexInit(&stFlushMutex);
ANT_LIB/software/system/dsi_debug.cpp:   DSIThread_MutexInit(&stWriteThreadMutex);
ANT_LIB/software/serial/device_management/dsi_ant_device.cpp:   if (DSIThread_MutexInit(&stMutexCriticalSection) != DSI_THREAD_ENONE)
ANT_LIB/software/serial/device_management/dsi_ant_device.cpp:   if (DSIThread_MutexInit(&stMutexChannelListAccess) != DSI_THREAD_ENONE)
ANT_LIB/software/serial/device_management/dsi_ant_device_polling.cpp:   if (DSIThread_MutexInit(&stMutexResponseQueue) != DSI_THREAD_ENONE)
ANT_LIB/software/serial/dsi_serial_iokit.cpp:    if (DSIThread_MutexInit(&stMutexCriticalSection) != DSI_THREAD_ENONE)
ANT_LIB/software/serial/dsi_serial_generic.cpp:   if(DSIThread_MutexInit(&stMutexCriticalSection) != DSI_THREAD_ENONE)
ANT_LIB/software/serial/dsi_framer_ant.cpp:   if (DSIThread_MutexInit(&stMutexCriticalSection) != DSI_THREAD_ENONE)
ANT_LIB/software/serial/dsi_framer_ant.cpp:   if (DSIThread_MutexInit(&stMutexResponseRequest) != DSI_THREAD_ENONE)
ANT_LIB/software/serial/dsi_framer_ant.cpp:   if (DSIThread_MutexInit(&stMutexCriticalSection) != DSI_THREAD_ENONE)
ANT_LIB/software/serial/dsi_framer_ant.cpp:   if (DSIThread_MutexInit(&stMutexResponseRequest) != DSI_THREAD_ENONE)
ANT_LIB/software/serial/dsi_vcp_si.cpp:    if (DSIThread_MutexInit(&stMutexCriticalSection) != DSI_THREAD_ENONE)